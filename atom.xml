<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yet Another Android Blog]]></title>
  <link href="http://oleksandr-yefremov.github.io/atom.xml" rel="self"/>
  <link href="http://oleksandr-yefremov.github.io/"/>
  <updated>2014-09-14T23:43:23+03:00</updated>
  <id>http://oleksandr-yefremov.github.io/</id>
  <author>
    <name><![CDATA[Oleksandr Yefremov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Life and Death of Fragment]]></title>
    <link href="http://oleksandr-yefremov.github.io/blog/2014/09/14/draft-fragment/"/>
    <updated>2014-09-14T23:04:06+03:00</updated>
    <id>http://oleksandr-yefremov.github.io/blog/2014/09/14/draft-fragment</id>
    <content type="html"><![CDATA[<p><br></p>

<p>There is a lot of stuff written about Activity and Fragment lifecycle and how to manage state and object retaining properly. So this is just a recap for myself, rather than tutorial.</p>

<p>Let&rsquo;s take a look at <strong>Activities</strong> and their destiny. There are 3 cases when and how activity can be destroyed.
<strong>First case</strong>: User enters activity <em>A</em>, from there goes to <em>B</em>, and then navigates back to <em>A</em>. Android won&rsquo;t save any instance state of activity <em>B</em> because user won&rsquo;t need this particular instance anymore. When he comes again to <em>B</em> he will get a fresh instance.
<strong>Second case</strong>: User enters activity <em>A</em> and rotates screen (or other configuration change occurs). Android has to recreate activity, so first it calls <code>onSaveInstanceState(Bundle outState)</code>, destroys <em>A</em> and creates new instance, then calls <code>onRestoreInstanceState(Bundle savedInstanceState)</code> to restore state of views (the same can be done in <code>onCreate(Bundle savedInstanceState)</code>).</p>

<p><strong>Third case</strong>: User enters activity <em>A</em>, from there goes to <em>B</em>, <em>C</em>, <em>D</em>â€¦ up the activity stack. At some point Android kills <em>A</em> to reclaim memory (or because you turned on useful feature <em>Developer options -> Don&rsquo;t keep activities</em>). Because user will eventually come back to <em>A</em>, system saves its state before killing and then recreates <em>A</em> with <code>savedInstanceState</code>.___
 Let&rsquo;s take a look at Fragments.Fragments are tightly coupled to activity&rsquo;s lifecycle</p>
]]></content>
  </entry>
  
</feed>
